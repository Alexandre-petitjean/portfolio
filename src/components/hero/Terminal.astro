---
// Terminal component with Python syntax highlighting
---

<div class="relative bg-gray-900 rounded-lg shadow-2xl overflow-hidden border border-gray-700">
    <!-- Terminal Header -->
    <div class="flex items-center px-4 py-2 bg-gray-800 border-b border-gray-700">
        <div class="flex space-x-2">
            <div class="w-3 h-3 rounded-full bg-red-500"></div>
            <div class="w-3 h-3 rounded-full bg-yellow-500"></div>
            <div class="w-3 h-3 rounded-full bg-green-500"></div>
        </div>
        <div class="flex-1 text-center text-sm text-gray-400">expert_developer.py</div>
    </div>
    
    <!-- Terminal Content -->
    <div class="p-6 font-mono text-sm leading-relaxed">
        <div class="space-y-3">
            <!-- Command 1: cat file -->
            <div class="flex items-start space-x-2 text-gray-400">
                <span class="text-green-400">$</span>
                <span class="typing-command" data-text="cat expert_developer.py">cat expert_developer.py</span>
            </div>
            
            <!-- Python Code with syntax highlighting -->
            <div class="text-sm" id="code-display" style="opacity: 0;">
                <div class="mb-2">
                    <span class="text-purple-400">class</span>
                    <span class="text-yellow-300"> ExpertDeveloper</span>
                    <span class="text-white">:</span>
                </div>
                <div class="ml-4">
                    <span class="text-purple-400">def</span>
                    <span class="text-blue-300"> __init__</span>
                    <span class="text-white">(</span>
                    <span class="text-orange-400">self</span>
                    <span class="text-white">):</span>
                </div>
                <div class="ml-8 space-y-1 mb-4">
                    <div>
                        <span class="text-orange-400">self</span><span class="text-white">.</span><span class="text-blue-300">experience</span>
                        <span class="text-white"> = </span>
                        <span class="text-green-300">"5+ années"</span>
                    </div>
                    <div>
                        <span class="text-orange-400">self</span><span class="text-white">.</span><span class="text-blue-300">stack</span>
                        <span class="text-white"> = [</span>
                        <span class="text-green-300">"Django"</span>
                        <span class="text-white">, </span>
                        <span class="text-green-300">"DevOps"</span>
                        <span class="text-white">, </span>
                        <span class="text-green-300">"Flutter"</span>
                        <span class="text-white">]</span>
                    </div>
                    <div>
                        <span class="text-orange-400">self</span><span class="text-white">.</span><span class="text-blue-300">projects</span>
                        <span class="text-white"> = </span>
                        <span class="text-green-300">"Production-ready"</span>
                    </div>
                </div>
                <div class="ml-4 mb-1">
                    <span class="text-purple-400">def</span>
                    <span class="text-blue-300"> deploy</span>
                    <span class="text-white">(</span>
                    <span class="text-orange-400">self</span>
                    <span class="text-white">):</span>
                </div>
                <div class="ml-8">
                    <span class="text-purple-400">return</span>
                    <span class="text-green-300"> "✅ Déployé avec succès!"</span>
                </div>
            </div>
            
            <!-- Command 2: python -->
            <div class="flex items-start space-x-2 text-gray-400" id="command-2" style="opacity: 0;">
                <span class="text-green-400">$</span>
                <span class="typing-command-2" data-text="python expert_developer.py">python expert_developer.py</span>
            </div>
            
            <!-- Output -->
            <div class="text-green-400" id="output" style="opacity: 0;">
                <span class="inline-block animate-pulse">●</span> Expert Django & DevOps initialisé
                <br>
                <span class="inline-block animate-pulse">●</span> Prêt pour nouveaux projets !
            </div>
        </div>
    </div>
</div>

<script>
    // Animation séquentielle du terminal
    setTimeout(() => {
        const codeDisplay = document.getElementById('code-display');
        if (codeDisplay) {
            codeDisplay.style.opacity = '1';
            codeDisplay.style.transition = 'opacity 0.5s ease-in';
        }
    }, 2000);

    setTimeout(() => {
        const command2 = document.getElementById('command-2');
        if (command2) {
            command2.style.opacity = '1';
            command2.style.transition = 'opacity 0.5s ease-in';
        }
    }, 4000);

    setTimeout(() => {
        const output = document.getElementById('output');
        if (output) {
            output.style.opacity = '1';
            output.style.transition = 'opacity 0.5s ease-in';
        }
    }, 5500);

    // Retirer le curseur après l'animation
    setTimeout(() => {
        const typingCommand = document.querySelector('.typing-command') as HTMLElement;
        if (typingCommand) {
            typingCommand.style.borderRight = 'none';
        }
    }, 2200);

    setTimeout(() => {
        const typingCommand2 = document.querySelector('.typing-command-2') as HTMLElement;
        if (typingCommand2) {
            typingCommand2.style.borderRight = 'none';
        }
    }, 6200);
</script>

<style>
    .typing-command {
        border-right: 2px solid #4ade80;
        animation: typing-command-1 1.5s steps(25, end);
        animation-delay: 0.5s;
        width: 0;
        overflow: hidden;
        white-space: nowrap;
        animation-fill-mode: forwards;
        display: inline-block;
    }

    .typing-command-2 {
        border-right: 2px solid #4ade80;
        animation: typing-command-2 1.8s steps(30, end);
        animation-delay: 4.2s;
        width: 0;
        overflow: hidden;
        white-space: nowrap;
        animation-fill-mode: forwards;
        display: inline-block;
    }

    @keyframes typing-command-1 {
        from { width: 0 }
        to { width: 25ch; } /* 25 caractères pour "cat expert_developer.py" */
    }

    @keyframes typing-command-2 {
        from { width: 0 }
        to { width: 30ch; } /* 30 caractères pour "python expert_developer.py" */
    }
</style> 